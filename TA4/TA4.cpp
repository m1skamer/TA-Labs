
#include <iostream>
#include <algorithm>
#include <conio.h>
using namespace std;
int get_i(int i) {
    if (i > 14) {
        return 0;
    }
    if (i < 0) {
        return 14;
    }
    else {
        return i;
    }
};
int get_j(int j) {
    if (j > 14) {
        return 0;
    }
    if (j < 0) {
        return 14;
    }
    else {
        return j;
    }
};
int main()
{
    int c = 0;
    int d = 0;
    int iterations = 0;
    int drp[15][15] = {
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
        {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
        {1,0,0,0,0,0,0,0,1,0,0,0,0,0,0},
        {1,0,0,0,0,0,0,1,0,0,0,0,0,0,0},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,0,1,1,1,0,0,0,0,0,0},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,0,0,1,1,0,0,0,0,0,0},
        {0,0,0,0,0,0,0,1,1,1,0,0,0,0,0},
        {0,0,0,1,1,0,0,0,0,0,0,0,0,0,0},
        {0,0,0,1,1,0,0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},

    };
    int drp1[15][15] = {
       {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
       {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
       {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
       {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
       {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
       {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
       {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
       {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
       {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
       {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
       {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
       {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
       {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
       {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
       {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},

    };
    int drp2[15][15] = {
       {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
       {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
       {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
       {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
       {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
       {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
       {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
       {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
       {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
       {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
       {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
       {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
       {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
       {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
       {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},

    };
    cout << "first iteration\n";
    bool exitProgram = false;
    for (int i = 0; i < 15; ++i) {
        for (int j = 0; j < 15; ++j) {
            if (drp[i][j] == 1) {
                d = drp[get_i(i)][get_j(j + 1)] + drp[get_i(i - 1)][get_j(j)] + drp[get_i(i)][get_j(j - 1)] + drp[get_i(i + 1)][get_j(j)] + drp[get_i(i + 1)][get_j(j + 1)] + drp[get_i(i - 1)][get_j(j - 1)] + drp[get_i(i - 1)][get_j(j + 1)] + drp[get_i(i + 1)][get_j(j - 1)];
                if (d < 2 || d>3) {
                    drp1[i][j] = 0;

                }
                else {
                    drp1[i][j] = 1;
                }
                d = 0;
            };
            if (drp[i][j] == 0) {
                c = drp[get_i(i)][get_j(j + 1)] + drp[get_i(i - 1)][get_j(j)] + drp[get_i(i)][get_j(j - 1)] + drp[get_i(i + 1)][get_j(j)] + drp[get_i(i + 1)][get_j(j + 1)] + drp[get_i(i - 1)][get_j(j - 1)] + drp[get_i(i - 1)][get_j(j + 1)] + drp[get_i(i + 1)][get_j(j - 1)];
                if (c == 3) {
                    drp1[i][j] = 1;
                }
                else {
                    drp1[i][j] = 0;
                }
                c = 0;

            };

        }

    }
    for (int x = 0; x < 15; ++x) {
        for (int y = 0; y < 15; ++y) {
            if (drp1[x][y] == 0) {
                cout << " - ";
            }
            if (drp1[x][y] == 1) {
                cout << " # ";
            }
        }
        cout << "\n";
    }
    cout << "----------------------------------------------------------------\n";
    while (!exitProgram) {
        for (int x = 0; x < 15; ++x) {
            for (int y = 0; y < 15; ++y) {
                drp2[x][y] = drp[x][y];
            }
        }
        cout << "press number key or esc for exit\n";
        char keyPressed = _getch();
        if (keyPressed == 27) { // 27 - это ASCII-код клавиши Escape
            exitProgram = true;
        }

        else if (isdigit(keyPressed)) { // Проверяем, является ли нажатая клавиша цифрой
            iterations = iterations + keyPressed - '0'; // Преобразуем символ цифры в целое число
            // Выполняем итерации
            for (int k = 0; k < iterations; ++k) {
                for (int i = 0; i < 15; ++i) {
                    for (int j = 0; j < 15; ++j) {
                        if (drp2[i][j] == 1) {
                            d = drp2[get_i(i)][get_j(j + 1)] + drp2[get_i(i - 1)][get_j(j)] + drp2[get_i(i)][get_j(j - 1)] + drp2[get_i(i + 1)][get_j(j)] + drp2[get_i(i + 1)][get_j(j + 1)] + drp2[get_i(i - 1)][get_j(j - 1)] + drp2[get_i(i - 1)][get_j(j + 1)] + drp2[get_i(i + 1)][get_j(j - 1)];
                            if (d < 2 || d>3) {
                                drp1[i][j] = 0;

                            }
                            else {
                                drp1[i][j] = 1;
                            }
                            d = 0;
                        };
                        if (drp2[i][j] == 0) {
                            c = drp2[get_i(i)][get_j(j + 1)] + drp2[get_i(i - 1)][get_j(j)] + drp2[get_i(i)][get_j(j - 1)] + drp2[get_i(i + 1)][get_j(j)] + drp2[get_i(i + 1)][get_j(j + 1)] + drp2[get_i(i - 1)][get_j(j - 1)] + drp2[get_i(i - 1)][get_j(j + 1)] + drp2[get_i(i + 1)][get_j(j - 1)];
                            if (c == 3) {
                                drp1[i][j] = 1;
                            }
                            else {
                                drp1[i][j] = 0;
                            }
                            c = 0;

                        };

                    }

                }
                for (int x = 0; x < 15; ++x) {
                    for (int y = 0; y < 15; ++y) {
                        drp2[x][y] = drp1[x][y];
                    }
                }
            }
            for (int x = 0; x < 15; ++x) {
                for (int y = 0; y < 15; ++y) {
                        if (drp1[x][y] == 0) {
                            cout << " - ";
                        }
                    if (drp1[x][y] == 1) {
                        cout << " # ";
                    }
                }
                cout << "\n";
            }
            cout << "number iteration " << iterations << "\n";
            cout << "----------------------------------------------------------------------------\n";
        }

    }

}